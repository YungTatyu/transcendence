version: '3'
services:
  auth:
    build: ./auth_service
    container_name: auth_app
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      - auth_db
      - auth_redis
    env_file: ./docker_env/auth.env

  auth_db:
    image: postgres:15
    container_name: auth_db
    env_file: ./docker_env/auth_db.env
    networks:
      - app_network
    volumes:
      - auth_db_data:/var/lib/postgresql/data

  auth_redis:
    image: redis:alpine
    container_name: auth_redis_server
    networks:
      - app_network

  game:
    build: ./game_service
    container_name: game
    env_file: ./docker_env/game.env
    tty: true
    ports:
      - "8001:8001"
    networks:
      - app_network
    depends_on:
      - game_redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://game:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  game_redis:
    image: redis:alpine
    container_name: game_redis_server
    networks:
      - app_network

  tournament:
    build: ./tournament_service
    container_name: tournament
    ports:
      - "8002:8002"
    env_file: ./docker_env/tournament.env
    networks:
      - app_network
    depends_on:
      - tournament_db
      - tournament_redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]

  tournament_db:
    image: postgres:15
    container_name: tournament_db
    env_file: ./docker_env/tournament_db.env
    networks:
      - app_network
    volumes:
      - tournament_db_data:/var/lib/postgresql/data

  tournament_redis:
    image: redis:alpine
    container_name: tournament_redis
    networks:
      - app_network
  
  user:
    build: ./user_service
    container_name: user_app
    ports:
      - "9000:9000"
    networks:
      - app_network
    depends_on:
      - user_db
    env_file: ./docker_env/user.env

  user_db:
    image: postgres:15
    container_name: user_db
    env_file: ./docker_env/user_db.env
    networks:
      - app_network
    volumes:
      - user_db_data:/var/lib/postgresql/data
  
  friends_activity_app:
    build: ./friends_activity_service
    container_name: friends_activity_app
    ports:
      - "10000:10000"
    networks:
      - app_network

  match:
    build: ./match_service
    container_name: match
    ports:
      - "8003:8003"
    env_file: ./docker_env/match.env
    networks:
      - app_network
    depends_on:
      - match_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]

  match_db:
    image: postgres:15
    container_name: match_db
    env_file: ./docker_env/match_db.env
    networks:
      - app_network
    volumes:
      - match_db_data:/var/lib/postgresql/data

networks:
  app_network:
    driver: bridge

volumes:
  auth_db_data:
  tournament_db_data:
  user_db_data:
  match_db_data:
