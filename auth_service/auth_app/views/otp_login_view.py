import logging

from rest_framework import status
from rest_framework.response import Response
from rest_framework.views import APIView

from auth_app.models import CustomUser
from auth_app.services.otp_service import OTPService

logger = logging.getLogger(__name__)


class OTPLoginView(APIView):
    """
    既存ユーザーのログイン処理
    """

    def post(self, request, *args, **kwargs):
        """
        1. ユーザー名とパスワードで認証
        2. 認証成功後、OTP 検証ステップへ進む
        """
        email = request.data.get("email")
        password = request.data.get("password")

        if not email or not password:
            logger.warn("Invalid request: missing email or password")
            return Response(
                {"error": "Username and password are required."},
                status=status.HTTP_400_BAD_REQUEST,
            )

        # 認証を試みる
        try:
            user = CustomUser.objects.get(email=email)
            if not user.check_password(password):  # パスワードをチェック
                raise ValueError("Invalid password")

        except Exception as e:
            logger.error(f"Authentication failed: {str(e)}")
            return Response(
                {"error": "Invalid email or password."},
                status=status.HTTP_401_UNAUTHORIZED,
            )
        # OTP 認証の開始メッセージを返す
        response = Response(
            {
                "message": "Use the OTP generated by your authentication app to complete the login process."
            },
            status=status.HTTP_200_OK,
        )

        # `email` を Cookie に保存
        response.set_cookie(
            key="email",
            value=email,
            httponly=True,
            secure=True,
            path="/",
            max_age=300,
        )

        logger.info(f"OTP login initiated for user: {email}")
        return response


class OTPLoginVerificationView(APIView):
    """
    OTP の検証
    """

    def post(self, request, *args, **kwargs):
        email = request.data.get("email")
        otp_token = request.data.get("otp")

        if not email or not otp_token:
            logger.warn("Invalid request body: missing email or otp")
            return Response(
                {"error": "Username and OTP are required."},
                status=status.HTTP_400_BAD_REQUEST,
            )
        try:
            user = CustomUser.objects.get(email=email)
        except Exception as e:
            logger.error(f"Authentication failed: {str(e)}")
            return Response(
                {"error": "Invalid email or password."},
                status=status.HTTP_401_UNAUTHORIZED,
            )

        if not OTPService.verify_otp(user.secret_key, otp_token):
            logger.warn(f"Invalid OTP for user: {email}")
            return Response(
                {"error": "Invalid OTP."},
                status=status.HTTP_400_BAD_REQUEST,
            )

        # トークン発行 (本来は JWT トークンを発行する)
        response = Response(
            {
                "access": "generated_access_token",
                "refresh": "generated_refresh_token",
            },
            status=status.HTTP_200_OK,
        )

        # `email` Cookie を削除
        response.delete_cookie("email", path="/")

        logger.info(f"OTP verified successfully for user: {email}")
        return response
